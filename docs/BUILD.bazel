load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")
load("@rules_rust_mdbook//:defs.bzl", "mdbook", "mdbook_server")
load("@rules_shell//shell:sh_binary.bzl", "sh_binary")

stardoc(
    name = "rules",
    out = "src/rules.md",
    input = "//julia:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["@rules_julia//julia:defs_bzl"],
)

stardoc(
    name = "pkg",
    out = "src/pkg.md",
    input = "//julia/pkg:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["@rules_julia//julia:defs_bzl"],
)

stardoc(
    name = "settings",
    out = "src/settings.md",
    func_template = "settings_func.vm",
    input = "//julia/settings:settings.bzl",
    tags = ["manual"],
    deps = ["@rules_julia//julia:defs_bzl"],
)

mdbook(
    name = "book",
    srcs = glob(["src/**/*.md"]) + [
        ":pkg",
        ":rules",
        ":settings",
    ],
    book = "book.toml",
    # Windows builds are typically super slow in CI so they're avoided.
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

alias(
    name = "docs",
    actual = ":book",
    tags = ["manual"],
)

mdbook_server(
    name = "server",
    book = ":book",
    tags = ["manual"],
)

sh_binary(
    name = "publish_book",
    srcs = ["publish_book.sh"],
    data = [":book"],
    env = {"BOOK_DIR": "$(rootpath :book)"},
    tags = ["manual"],
)
